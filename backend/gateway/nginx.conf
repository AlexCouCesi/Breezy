events {}  # Bloc requis par NGINX (même vide)

http {
    server {
        listen 8080;  # Le proxy écoute sur le port 8080

        # Frontend public (pages Next.js côté client)
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Redirige /login → /auth/login sur le frontend
        location /login {
            proxy_pass http://frontend:3000/auth/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redirige /register → /auth/register sur le frontend
        location /register {
            proxy_pass http://frontend:3000/auth/register;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Page /feed protégée par une auth_request vers /authenticate
        location /feed {
            auth_request /authenticate;               # Demande de validation JWT côté backend
            error_page 401 = /login;                  # Redirection en cas de 401
            proxy_pass http://frontend:3000/feed;     # Accès autorisé
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Middleware d'authentification interrogé par /feed
        location /authenticate {
            proxy_pass http://auth:4000/api/auth/authenticate;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /uploads/profile-pictures/ {
            alias /app/uploads/profile-pictures/;
            autoindex off; // pourne pas avoir accès à la page index of /uploads
            access_log off;
            expires 1d;
        }

        # Proxy vers le microservice d'authentification
        location /api/auth/ {
            proxy_pass http://auth:4000/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy vers le microservice utilisateurs
        location /api/users/ {
            proxy_pass http://users:5000/api/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Proxy vers le microservice posts (publications)
        location /api/posts/ {
            proxy_pass http://post:5000/api/posts/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
